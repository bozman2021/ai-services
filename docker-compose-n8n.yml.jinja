networks:
  {{network_name}}:
    driver: ipvlan
    driver_opts:
      parent: enX0 # the interface on your docker host that it will tunnel through
      ipvlan_mode: l3 # Layer 3 mode
    ipam:
      config:
        - subnet: 192.168.23.0/24 # your networks subnet
        - subnet: 192.168.24.0/24 # your networks subnet
    name: {{network_name}}

volumes:
  n8n_storage:
  qdrant_storage:
  open-webui:
  flowise:
  db-config:

  #--- X-N8N ---
{{x_n8n_service_name}}: &service-n8n
  image: n8nio/n8n:latest
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=db
    - DB_POSTGRESDB_USER=${POSTGRES_N8N_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_N8N_PASSWORD}
    - DB_POSTGRESDB_DATABASE=postgres
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - N8N_SECURE_COOKIE=false
      
services:
  #--- Flowise ---
  {{flowise_service_name}}:
    container_name: {{flowise_service_name}}
    image: flowiseai/flowise
    restart: unless-stopped
    environment:
      - PORT=3001
    ports:
      - "3001:3001"
    extra_hosts:
      - "host.docker.internal:host-gateway"        
    volumes:
      - ./flowise:/root/.flowise
    entrypoint: /bin/sh -c "sleep 3; flowise start"
    networks:
      cloudl3net-ai2:
        ipv4_address: 192.168.23.40
        
  #--- PostgreSQL ---
  #{{postgres_n8n_service_name}}:
  #  container_name: {{postgres_n8n_service_name}}
  #  image: postgres:16-alpine 
  #  restart: unless-stopped
  #  environment:
  #    - DB_POSTGRESDB_HOST=db
  #    - DB_POSTGRESDB_USER=${POSTGRES_N8N_USER}
  #    - DB_POSTGRESDB_PASSWORD=${POSTGRES_N8N_PASSWORD}
  #    - POSTGRES_PASSWORD=${POSTGRES_N8N_PASSWORD}
  #    - POSTGRES_DB=${POSTGRES_N8N_DB}
  #  ports:
  #    - "5432:5432"
  #  volumes:
  #    - ./postgres_storage:/var/lib/postgresql/data
  #  healthcheck:
  #    test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_N8N_USER} -d ${POSTGRES_N8N_DB}']
  #    interval: 5s
  #    timeout: 5s
  #    retries: 10
  #  networks:
  #    cloudl3net-ai2:
  #      ipv4_address: 192.168.23.50

  #--- N8N-import ---
  {{n8n_import_service_name}}:
    <<: *service-n8n
    container_name: {{n8n_import_service_name}}
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    #depends_on:
    #  {{postgres_n8n_service_name}}:
    #    condition: service_healthy
    networks:
      cloudl3net-ai2:
        ipv4_address: 192.168.23.57
        
  #--- N8N ---
  {{n8n_service_name}}:
    <<: *service-n8n
    container_name: {{n8n_service_name}}
    restart: unless-stopped
    ports:
      - "5678:5678"
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      #{{postgres_n8n_service_name}}:
      #  condition: service_healthy
      {{n8n_import_service_name}}:
        condition: service_completed_successfully
    networks:
      {{network_name}}:
        ipv4_address: 192.168.23.55

  #--- QDRANT ---
  {{qdrant_import_service_name}}:
    container_name: {{qdrant_import_service_name}}
    image: qdrant/qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      {{network_name}}:
        ipv4_address: 192.168.23.65
