#version: '3'

volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:
  flowise:

networks:
  {{network_name}}:
    driver: ipvlan
    driver_opts:
      parent: enX0 # the interface on your docker host that it will tunnel through
      ipvlan_mode: l3 # Layer 3 mode
    ipam:
      config:
        - subnet: {{network_name_subnet_1}}/24 # your networks subnet
        - subnet: {{network_name_subnet_2}}/24 # your networks subnet
    name: {{network_name}}

services:

#--- X-N8N ---
{{x-n8n_service_name}}: &service-n8n
  image: n8nio/n8n:latest
  restart: unless-stopped
  container_name: {{x-n8n_service_name}}
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
  links:
    - postgres
  networks:
     - {{network_name}}:
        ipv4_address: 192.168.22.30
  
  #--- Flowise ---
  {{flowise_service_name}}:
    image: flowiseai/flowise
    restart: unless-stopped
    container_name: {{flowise_service_name}}
    environment:
        - PORT=3001
    ports:
        - "3001:3001"
    extra_hosts:
      - "host.docker.internal:host-gateway"        
    volumes:
        - ${DATA_DIR-./data}/flowise:/root/.flowise
    entrypoint: /bin/sh -c "sleep 3; flowise start"
    networks:
     - {{network_name}}:
        ipv4_address: 192.168.22.40
        
  #--- PostgreSQL ---
  {{postgres_service_name}}:
    image: postgres:16-alpine 
    restart: unless-stopped
    container_name: {{postgres_service_name}}
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - ${DATA_DIR-./data}/postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
     - {{network_name}}:
        ipv4_address: 192.168.22.50

    #--- N8N-import ---
    {{n8n-import_service_name}}:
    <<: *service-n8n
    container_name: {{n8n-import_service_name}}
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ${DATA_DIR-./data}/n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy
        
  #--- N8N ---
  {{n8n_service_name}}:
    <<: *service-n8n
    container_name: {{n8n_service_name}}
    restart: unless-stopped
    ports:
      - "5678:5678"
    volumes:
      - n8n_storage:/home/node/.n8n
      - ${DATA_DIR-./data}/n8n/backup:/backup
      - ${DATA_DIR-./data}/shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully
    networks:
     - {{network_name}}:
        ipv4_address: 192.168.22.55

  #--- QDRANT ---
  {{qdrant-import_service_name}}:
    image: qdrant/qdrant
    container_name: {{qdrant-import_service_name}}
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - ${DATA_DIR-./data}/qdrant_storage:/qdrant/storage
    networks:
     - {{network_name}}:
        ipv4_address: 192.168.22.55
